var crypto=require("crypto"),uuid=require("node-uuid"),VVRequestSigning=function(){function n(){}return n.prototype.sign=function(n,t,i,r,u,f){var e="SHA256",y=new Date,o=y.toISOString(),v;n["X-VV-RequestDate"]=o,e=e||"HS256";var s={RIPEMD160:"ripemd160",SHA1:"sha1",SHA256:"sha256",SHA384:"sha384",SHA512:"sha512",MD5:"md5"},h="",p=u,c="",l=uuid.v1(),a="";if(s[e])h="VVA-HMAC-"+e;else throw new Error("Algorithm not supported");this.request=new VV.HttpRequest(t,"region1",i,n,r),c=this.signedHeaders();var w=this.createCanonicalRequest(),b=h+"\n"+o+"\n"+u+"\n"+this.hexEncodedHash(w),k=crypto.createHmac(s[e],o).update(l+f).digest("hex");a=crypto.createHmac(s[e],k).update(b).digest("hex"),v="Algorithm="+h+", Credential="+p+", SignedHeaders="+c+", Nonce="+l+", Signature="+a,n["X-Authorization"]=v},n.prototype.createCanonicalRequest=function(){var t=this.request.pathname(),n=[];return n.push(this.request.method),n.push(t.substring(t.indexOf("/api/"))),n.push(this.request.search()),n.push(this.canonicalHeaders()),n.push(this.signedHeaders()),this.request.body!=null&&this.request.body.length>0?n.push(this.hexEncodedHash(this.request.body)):n.push(""),n.join("\n")},n.prototype.canonicalHeaders=function(){var n=[],t;return VV.util.each.call(this,this.request.headers,function(t,i){n.push([t,i])}),n.sort(function(n,t){return n[0].toLowerCase()<t[0].toLowerCase()?-1:1}),t=[],VV.util.arrayEach.call(this,n,function(n){n[0]!=="X-Authorization"&&t.push(n[0].toLowerCase()+":"+this.canonicalHeaderValues(n[1].toString()))}),t.join("\n")},n.prototype.canonicalHeaderValues=function(n){return n.replace(/\s+/g," ").replace(/^\s+|\s+$/g,"")},n.prototype.signedHeaders=function(){var n=[];return VV.util.each.call(this,this.request.headers,function(t){t=t.toLowerCase(),t!=="X-Authorization"&&n.push(t)}),n.sort().join(";")},n.prototype.hexEncodedHash=function(n){return VV.util.crypto.sha256(n,"hex")},n.prototype.urlsafeB64Decode=function(n){return n+=Array(5-n.length%4).join("="),new Buffer(n.replace(/\-/g,"+").replace(/_/g,"/"),"base64").toString("ascii",null,null)},n.prototype.urlsafeB64Encode=function(n){return new Buffer(n,"ascii").toString("base64",null,null).replace(/\+/g,"-").replace(/\//g,"_").split("=")[0]},n}();module.exports=new VVRequestSigning
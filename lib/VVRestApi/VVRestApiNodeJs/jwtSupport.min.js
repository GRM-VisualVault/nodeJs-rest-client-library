var crypto=require("crypto"),JWT=function(){function n(){}return n.prototype.decode=function(n,t,i){var r,u,f;if(i=typeof i=="undefined"?!0:i,r=n.split("."),r.length!=3)throw new Error("Wrong number of segments.");if(u=JSON.parse(this.urlsafeB64Decode(r[0])),null===u)throw new Error("Invalid segment encoding");if(f=JSON.parse(this.urlsafeB64Decode(r[1])),null===f)throw new Error("Invalid segment encoding");if(i){if(!u.alg)throw new Error("Empty algorithm");if(this.urlsafeB64Decode(r[2])!=this.sign([r[0],r[1]].join("."),t,u.alg))throw new Error("Signature verification failed");}return f},n.prototype.encode=function(n,t,i){i=i||"HS256";var u={typ:"JWT",alg:i},r=[this.urlsafeB64Encode(JSON.stringify(u)),this.urlsafeB64Encode(JSON.stringify(n))],f=r.join("."),e=this.sign(f,t,i);return r.push(this.urlsafeB64Encode(e)),r.join(".")},n.prototype.sign=function(n,t,i){i=i||"HS256";var r={HS256:"sha256",HS512:"sha512"};if(!r[i])throw new Error("Algorithm not supported");return crypto.createHmac(r[i],t).update(n).digest("binary")},n.prototype.urlsafeB64Decode=function(n){return n+=Array(5-n.length%4).join("="),new Buffer(n.replace(/\-/g,"+").replace(/_/g,"/"),"base64").toString("ascii",null,null)},n.prototype.urlsafeB64Encode=function(n){return new Buffer(n,"ascii").toString("base64",null,null).replace(/\+/g,"-").replace(/\//g,"_").split("=")[0]},n}();module.exports=new JWT